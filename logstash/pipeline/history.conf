input {
    file {
        path => "/home/.zsh_history"
        mode => "tail"
        start_position => "beginning"
        sincedb_path => "/home/.zsh_history_sincedb"
        tags => "zsh_history"
        codec => multiline {
            # Merge a history entry has multiple lines into one line
            pattern => "^:%{SPACE}%{NONNEGINT:beginning_time}:%{NONNEGINT:elapsed_seconds};%{GREEDYDATA:command}"
            negate => true
            what => "previous"
        }
    }
}

filter {
    if "zsh_history" in [tags] {
        grok {
            match => {
                "message" => "^:%{SPACE}%{NONNEGINT:beginning_time}:%{NONNEGINT:elapsed_seconds};%{GREEDYDATA:command}"
            }
        }
        grok {
            match => {
                "command" => "^%{NOTSPACE:executed_command}%{SPACE}%{GREEDYDATA:options_or_arguments}"
            }
        }
        ruby {
            code => "event.set('executed_command', File.basename(event.get('executed_command')))"
        }
        date {
            match => [ "beginning_time", "UNIX" ]
        }
        mutate {
            remove_field => [
                "path",
                "options_or_arguments",
                "beginning_time",
                "elapsed_seconds",
                "host",
                "command",
                "message",
                "@version"
            ]
        }
    }
}

output {
    if "zsh_history" in [tags] {
        elasticsearch {
            hosts => ["http://elasticsearch:9200"]
            index => "zsh_history"
            template => "/usr/share/logstash/templates/zsh_history.json"
            template_name => "zsh_history"
        }
    }
}
